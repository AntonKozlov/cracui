name: Build

on:
  push:
    tags:
      - 'release-*'
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Start build container
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com;
          docker run -d --name build
          -w $PWD
          -v /home/runner:/home/runner
          -u $(id -u):$(id -g)
          --entrypoint tail
          docker.pkg.github.com/crac/docker-build/image:latest
          -f /dev/null
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute parameters
        id: compute
        run: |
          echo "::set-output name=name::${GITHUB_REF##refs/tags/release-}"

      - uses: actions/checkout@v2

      - run: bash ./configure
          --disable-warnings-as-errors
          --with-version-pre=crac
          --with-native-debug-symbols=none
        shell: docker exec build bash -e {0}

      - run: |
          make images docs
          mv build/linux-x86_64-server-release/images/jdk jdk17-crac
          mv build/linux-x86_64-server-release/images/docs .
        shell: docker exec build bash -e {0}

      - name: Bundle CRIU
        run: |
          id=$(curl https://api.github.com/repos/crac/criu/releases/tags/release-crac | jq .assets[0].id)
          curl https://api.github.com/repos/crac/criu/releases/assets/$id -LJOH 'Accept: application/octet-stream'
          tar axf criu-dist.tar.gz
          cp criu-dist/sbin/criu jdk17-crac/lib/criu
          sudo chown root:root jdk17-crac/lib/criu
          sudo chmod u+s jdk17-crac/lib/criu
          tar -zcf jdk17-crac.tar.gz jdk17-crac

      - uses: actions/upload-artifact@v2
        with:
          name: jdk
          path: jdk17-crac.tar.gz

      - name: Compress docs
        run: tar -zcf docs.tar.gz docs

      - uses: actions/upload-artifact@v2
        with:
          name: docs
          path: docs.tar.gz

      - name: Delete old release
        run: |
          id=$(curl -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/crac/jdk/releases/tags/release-${{ steps.compute.outputs.name }} | jq '.id')
          curl -X DELETE -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/crac/jdk/releases/$id || true
        if: startsWith(github.ref, 'refs/tags/release-')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: startsWith(github.ref, 'refs/tags/release-')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ steps.compute.outputs.name }}
          release_name: ${{ steps.compute.outputs.name }}
          draft: false
          prerelease: false

      - name: Upload JDK release
        id: upload-jdk
        uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/release-')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./jdk17-crac.tar.gz
          asset_name: jdk17-crac.tar.gz
          asset_content_type: application/gzip

      - name: Checkout gh-pages
        uses: actions/checkout@v2
        if: startsWith(github.ref, 'refs/tags/release-')
        with:
          ref: 'gh-pages'
          path: 'gh-pages'

      - name: Upload Javadoc to Github Pages
        run: |
          rsync --delete -r docs/ gh-pages/${{ steps.compute.outputs.name }}/
          git config --global user.email "bot@crac.github.com"
          git config --global user.name "Github actions"
          git -C gh-pages add .
          git -C gh-pages commit -m 'Update ${{ steps.compute.outputs.name }}'
          git -C gh-pages push origin gh-pages
        if: startsWith(github.ref, 'refs/tags/release-')